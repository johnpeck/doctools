#!/usr/bin/python
#
# spellgen.py
#     
# Generates the spellcheck.sh file using tex files pulled into a latex
# document.
#
# Arguments: basename -- the filename base of the main latex file
#            aspell dictionary -- list of special words
#
# To create the aspell dictionary, make a file with a list of words in
# it. Then call aspell with:
# apell --lang=en create master aspell_file.rws < my_custom_list.list
#
# Usage: python spellgen.py <latex logfile base> <aspell jargon list>

import os
import sys # For handling the command line argument
import subprocess # For shell commands

thisdir = os.path.dirname(os.path.realpath(__file__))
# -------------------------- Begin configuration ---------------------


logfile = sys.argv[1] # log file
dictfile = sys.argv[2] # dictionary file
tplfile = thisdir + '/spellcheck.tpl' 
# Template file for the shell script
shlfile = os.getcwd() + '/spellcheck.sh' # Shell script file



# -------------------------- End configuration -----------------------


# loglist()
#
# Returns a list of tex files included in a document by parsing the
# log file (logfile)
def loglist():
    if (not os.access(logfile,os.F_OK)):
        print ('loglist: could not find the log file ' + logfile)
        return
    else:
        inclist = []
        fin = open(logfile,'r')
        rawfile = fin.read()
        for line in rawfile.split('\n'):
            print(line)
            if line.find('./') != -1:
                # Only return tex files in the document root
                print(line)
                if ( len(line.split('/')) == 2 ):
                    for item in line.split('/'):
                        if item.find('.tex') != -1:
                            item = item.strip('*')
                            itembase = item.split('.')[0]
                            texfile = itembase + '.tex'
                            inclist.append(texfile)
                            fin.close()
    return inclist
                            


def main():
    if (not os.access(tplfile,os.F_OK)):
        print ('Could not find the template file ' + tplfile)
    else:
        fin = open(tplfile,'r')
        rawfile = fin.read()
        texfiles = loglist()
        """ Write the template lines """
        fot = open(shlfile,'w')                 
        for line in rawfile.split('\n'):
            fot.write(line + '\n')
        fot.write('#' + '\n')
        fot.write('# The following lines are generated by spellgen.py' + '\n')
        fot.write('#' + '\n')
        for filename in texfiles:
            fot.write('aspell --mode=tex ' +
                    '--add-extra-dicts=./' + dictfile +
                    ' -c ./' + filename + '\n')
        fot.close()
        

if __name__ == "__main__":
    main()
